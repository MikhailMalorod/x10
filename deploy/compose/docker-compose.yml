version: '3.8'

services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: xio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кеширования и очередей
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ChromaDB для векторного поиска
  chroma:
    image: chromadb/chroma:latest
    ports:
      - "8001:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - ANONYMIZED_TELEMETRY=False
    volumes:
      - chroma_data:/chroma/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  # XIO Backend (для разработки)
  xio-backend:
    build:
      context: ../../backend
      dockerfile: ../deploy/docker/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/xio
      - REDIS_URL=redis://redis:6379/0
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      chroma:
        condition: service_healthy
    volumes:
      - ../../backend:/app
      - /var/run/docker.sock:/var/run/docker.sock  # Для Docker sandbox
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Celery Worker
  celery-worker:
    build:
      context: ../../backend
      dockerfile: ../deploy/docker/Dockerfile.backend
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/xio
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../backend:/app
      - /var/run/docker.sock:/var/run/docker.sock  # Для Docker sandbox
    command: ["celery", "-A", "app.workers.run_worker", "worker", "--loglevel=info"]

volumes:
  postgres_data:
  redis_data:
  chroma_data: 